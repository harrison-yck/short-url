apply from: file("${rootDir}/gradle/project.gradle")

subprojects {
    group = "app.ShortUrl"
    version = '1.0.0'

    repositories {
        maven {
            url 'https://neowu.github.io/maven-repo/'
            content {
                includeGroup 'core.framework'
            }
        }
    }
}

def coreNGVersion = '7.6.10'
def mysqlVersion = '8.0.22'

configure([project(':backend:url-service')]) {
    dependencies {
        runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
        testRuntimeOnly 'org.hsqldb:hsqldb:2.5.1'
    }
}

configure(subprojects.findAll { it.name.endsWith('-interface') }) {
    apply from: file("${rootDir}/gradle/lib.gradle")
    dependencies {
        implementation "core.framework:core-ng-api:${coreNGVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-frontend') }) {
    apply from: file("${rootDir}/gradle/app.gradle")
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        testImplementation "core.framework:core-ng-test:${coreNGVersion}"
    }
}

configure([project(":frontend:website")] + subprojects.findAll { it.name.endsWith('-service') }) {
    apply from: file("${rootDir}/gradle/app.gradle")

    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        implementation "core.framework:core-ng-test:${coreNGVersion}"
        testImplementation "core.framework:core-ng-mongo:${coreNGVersion}"
        testImplementation "core.framework:core-ng-mongo-test:${coreNGVersion}"
    }
}

configure(subprojects.findAll { it.name.endsWith('-library') }) {
    dependencies {
        implementation "core.framework:core-ng:${coreNGVersion}"
        testImplementation "core.framework:core-ng-test:${coreNGVersion}"
    }
}
