apiVersion: apps/v1
kind: Deployment
metadata:
  name: log-collector
  namespace: app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: log-collector
  revisionHistoryLimit: 10
  strategy:
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  minReadySeconds: 10
  template:
    metadata:
      labels:
        app: log-collector
    spec:
      nodeSelector:
        pool: ops
      terminationGracePeriodSeconds: 60
      readinessGates:
        - conditionType: cloud.google.com/load-balancer-neg-ready
      containers:
        - name: log-collector
          image: neowu/log-collector:7.6.3
          env:
            - name: JAVA_OPTS
              value: "-XX:+UseG1GC -XX:MaxRAMPercentage=50 -XX:MaxMetaspaceSize=128m -Xss256k -XX:G1PeriodicGCInterval=2160000"
            - name: SYS_KAFKA_URI
              value: "log-kafka-0.log-kafka"
            - name: SYS_LOG_APPENDER
              value: "log-kafka-0.log-kafka"
            - name: APP_ALLOWEDORIGINS
              value: "*"
            - name: APP_COOKIES
              value: "visitor_id"
          ports:
            - containerPort: 8443   # for ingress finding the health check probe
          readinessProbe:
            httpGet:
              path: /health-check
              scheme: HTTPS
              port: 8443
            initialDelaySeconds: 10
            periodSeconds: 10
          resources:
            requests:
              memory: 384Mi
            limits:
              memory: 384Mi
---
apiVersion: v1
kind: Service
metadata:
  name: log-collector
  namespace: app
  annotations:
    cloud.google.com/app-protocols: '{"https":"HTTPS"}'
spec:
  type: NodePort
  ports:
    - name: https
      port: 443
      targetPort: 8443
  selector:
    app: log-collector

