apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: log-zookeeper
spec:
  serviceName: log-zookeeper
  replicas: 1
  selector:
    matchLabels:
      app: log-zookeeper
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: log-zookeeper
    spec:
      containers:
        - name: log-zookeeper
          image: zookeeper:3.5.8
          env:
            - name: JMXDISABLE
              value: "true"
            - name: SERVER_JVMFLAGS
              value: "-Dzookeeper.jmx.log4j.disable=true"
            - name: ZOO_DATA_DIR
              value: "/data"
            - name: ZOO_DATA_LOG_DIR
              value: "/datalog"
            - name: ZOO_ADMINSERVER_ENABLED
              value: "false"
            - name: ZOO_AUTOPURGE_PURGEINTERVAL
              value: "24"
          volumeMounts:
            - name: data
              mountPath: /data
            - name: datalog
              mountPath: /datalog
          resources:
            limits:
              memory: 256Mi
      priorityClassName: critical
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes: [ ReadWriteOnce ]
        resources:
          requests:
            storage: 10Gi
    - metadata:
        name: datalog
      spec:
        accessModes: [ ReadWriteOnce ]
        resources:
          requests:
            storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: log-zookeeper
spec:
  clusterIP: None
  ports:
    - port: 2181
  selector:
    app: log-zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: log-kafka
spec:
  serviceName: log-kafka
  replicas: 1
  selector:
    matchLabels:
      app: log-kafka
  updateStrategy:
    type: RollingUpdate
  podManagementPolicy: Parallel
  template:
    metadata:
      labels:
        app: log-kafka
    spec:
      containers:
        - name: log-kafka
          env:
            - name: KAFKA_JMX_OPTS
              value: "-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port=1099 -Dcom.sun.management.jmxremote.rmi.port=1099"
            - name: KAFKA_HEAP_OPTS
              value: "-Xms1G -Xmx1G"
            - name: KAFKA_ARGS
              value: "--override zookeeper.connect=log-zookeeper-0.log-zookeeper:2181 --override log.retention.bytes=45000000000 --override log.retention.hours=168 --override message.max.bytes=2000000 --override num.partitions=1"
          image: neowu/kafka:2.6.0
          volumeMounts:
            - name: data
              mountPath: /data
          resources:
            limits:
              memory: 1500Mi
      priorityClassName: critical
  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: log-kafka
spec:
  clusterIP: None
  ports:
    - port: 9092
  selector:
    app: log-kafka

